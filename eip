#!/bin/sh
#
#
#	Resource Agent for AWS EC2 EIP
#
# Copyright (c) 2014 mooapp All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs

#######################################################################

meta_data() {
	cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="eip" version="0.9">
<version>1.0</version>

<longdesc lang="en">
This is a Resource Agent for AWS EC2 EIP (Elastic IP Address).
</longdesc>
<shortdesc lang="en">AWS EC2 EIP resource agent</shortdesc>

<parameters>
<parameter name="allocation_id" required="1">
<longdesc lang="en">
The allocation ID of the Elastic IP Address
</longdesc>
<shortdesc lang="en">Allocation ID</shortdesc>
<content type="string" />
</parameter>

</parameters>

<actions>
<action name="start"        timeout="20" />
<action name="stop"         timeout="20" />
<action name="monitor"      timeout="20" interval="10" depth="0" />
<action name="meta-data"    timeout="5" />
<action name="validate-all"   timeout="20" />
</actions>
</resource-agent>
END
}

#######################################################################

eip_usage() {
	cat <<END
usage: $0 {start|stop|monitor|validate-all|meta-data}

Expects to have a fully populated OCF RA-compliant environment set.
END
}

eip_start() {
    /usr/bin/aws ec2 associate-address --allocation-id ${OCF_RESKEY_allocation_id} --network-interface-id ${interface_id} --allow-reassociation
}

eip_stop() {
    eip_monitor
    if [ $? =  $OCF_SUCCESS ]; then
    	association_id=$(/usr/bin/aws ec2 describe-addresses --allocation-ids ${OCF_RESKEY_allocation_id} --output text | awk '{print$3}')
        /usr/bin/aws ec2 disassociate-address --association-id ${association_id}
    fi
    return $OCF_SUCCESS
}

eip_monitor() {
    wget -q -O - http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/public-ipv4s > /dev/null
    if [ $? -eq 0  ]; then
        return $OCF_SUCCESS
    fi
    return $OCF_NOT_RUNNING
}

eip_validate() {
    return $OCF_SUCCESS
}

instance_id=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
MAC_ADDR=$(ip link show eth1 | tail -1 | awk '{print$2}')
interface_id=$(wget -q -O - http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/interface-id/)

case $__OCF_ACTION in
meta-data)	meta_data
		exit $OCF_SUCCESS
		;;
start)		eip_start;;
stop)		eip_stop;;
monitor)	eip_monitor;;
validate-all)   eip_validate;;
usage|help)	eip_usage
		exit $OCF_SUCCESS
		;;
*)		eip_usage
		exit $OCF_ERR_UNIMPLEMENTED
		;;
esac
rc=$?
ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION : $rc"
exit $rc

